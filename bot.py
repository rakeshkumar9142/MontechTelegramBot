# bot.py

import os
import logging
import csv
from dotenv import load_dotenv

from telegram import Update
from telegram.ext import (
    Application,
    CommandHandler,
    ContextTypes,
    ConversationHandler,
    MessageHandler,
    filters,
)

# --- –ë–∞–∑–æ–≤–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ ---
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)
logger = logging.getLogger(__name__)

load_dotenv()
TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
if not TOKEN:
    raise ValueError("–ù–µ –Ω–∞–π–¥–µ–Ω TELEGRAM_BOT_TOKEN –≤ —Ñ–∞–π–ª–µ .env. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ.")

# --- –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –¥–∏–∞–ª–æ–≥–∞ ---
GET_NAME, GET_EMAIL, GET_MESSAGE = range(3)
CONTACT_FILE = "contacts.csv"

# --- –¢–µ–∫—Å—Ç—ã –¥–ª—è –±–æ—Ç–∞ (–Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ) ---
–ü–†–ò–í–ï–¢–°–¢–í–ï–ù–ù–û–ï_–°–û–û–ë–©–ï–ù–ò–ï = (
    "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Montech IT –ë–æ—Ç!\n\n"
    "–ú—ã –≤–∞—à–∏ –ø–∞—Ä—Ç–Ω–µ—Ä—ã –≤ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ—Ç—Ä—è—Å–∞—é—â–∏—Ö —Ü–∏—Ñ—Ä–æ–≤—ã—Ö —Ä–µ—à–µ–Ω–∏–π. "
    "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –Ω–∏–∂–µ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –æ –Ω–∞—Å –±–æ–ª—å—à–µ.\n\n"
    "/services - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å, —á—Ç–æ –º—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º\n"
    "/portfolio - –û–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –Ω–∞—à–∏–º–∏ —Ä–∞–±–æ—Ç–∞–º–∏\n"
    "/contact - –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏\n\n"
    "–î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help."
)

–û_–ù–ê–°_–¢–ï–ö–°–¢ = (
    "Montech ‚Äî —ç—Ç–æ –ø—Ä–æ–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π —Å—Ç–∞—Ä—Ç–∞–ø, –ø–æ—Å–≤—è—â–µ–Ω–Ω—ã–π –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—é –ø–µ—Ä–µ–¥–æ–≤—ã—Ö —Ä–µ—à–µ–Ω–∏–π "
    "–≤ –æ–±–ª–∞—Å—Ç–∏ –ò–ò –∏ –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏. –ù–∞—à–∞ –º–∏—Å—Å–∏—è ‚Äî —Ä–∞—Å—à–∏—Ä—è—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–∏–∑–Ω–µ—Å–∞, "
    "—Å–æ–∑–¥–∞–≤–∞—è –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–µ, —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ –∏ —É–¥–æ–±–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."
)

–£–°–õ–£–ì–ò_–¢–ï–ö–°–¢ = (
    "–ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —à–∏—Ä–æ–∫–∏–π —Å–ø–µ–∫—Ç—Ä —É—Å–ª—É–≥ –¥–ª—è –≤–æ–ø–ª–æ—â–µ–Ω–∏—è –≤–∞—à–∏—Ö –∏–¥–µ–π –≤ –∂–∏–∑–Ω—å:\n\n"
    "ü§ñ **–ò–ò –∏ —á–∞—Ç-–±–æ—Ç—ã:** –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç—ã –∏ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–µ —á–∞—Ç-–±–æ—Ç—ã.\n"
    "üåê **–í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞:** –í—ã—Å–æ–∫–æ–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω—ã–µ –≤–µ–±-—Å–∞–π—Ç—ã –∏ —Ü–µ–ª–µ–≤—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã.\n"
    "üìà **–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è:** –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤ —Å –ø–æ–º–æ—â—å—é —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π.\n\n"
    "–ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å –ø—Ä–æ–µ–∫—Ç? –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /contact!"
)

–ü–û–†–¢–§–û–õ–ò–û_–¢–ï–ö–°–¢ = (
    "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —É–≤–∏–¥–µ—Ç—å –ø—Ä–∏–º–µ—Ä—ã –Ω–∞—à–∏—Ö –ª—É—á—à–∏—Ö —Ä–∞–±–æ—Ç:\n\n"
    "üîó **–ü—Ä–æ–µ–∫—Ç 1:** [–°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∞—à –ø—Ä–æ–µ–∫—Ç]\n"
    "üîó **–ü—Ä–æ–µ–∫—Ç 2:** [–°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∞—à –ø—Ä–æ–µ–∫—Ç]\n"
    "üîó **–ü—Ä–æ–µ–∫—Ç 3:** [–°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∞—à –ø—Ä–æ–µ–∫—Ç]\n\n"
    "–ú—ã –≥–æ—Ä–¥–∏–º—Å—è –∫–∞–∂–¥—ã–º —Å–æ–∑–¥–∞–Ω–Ω—ã–º –Ω–∞–º–∏ —Ä–µ—à–µ–Ω–∏–µ–º!"
)

–ü–û–ú–û–©–¨_–¢–ï–ö–°–¢ = (
    "–í–æ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:\n\n"
    "/start - –ù–∞—á–∞–ª—å–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ\n"
    "/about - –£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –Ω–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏\n"
    "/services - –°–ø–∏—Å–æ–∫ –Ω–∞—à–∏—Ö —É—Å–ª—É–≥\n"
    "/portfolio - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞—à–∏ —Ä–∞–±–æ—Ç—ã\n"
    "/contact - –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞–º —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
    "/cancel - –û—Ç–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â—É—é –æ–ø–µ—Ä–∞—Ü–∏—é (–Ω–∞–ø—Ä–∏–º–µ—Ä, –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è)"
)

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ ---

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text(–ü–†–ò–í–ï–¢–°–¢–í–ï–ù–ù–û–ï_–°–û–û–ë–©–ï–ù–ò–ï)

async def about(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text(–û_–ù–ê–°_–¢–ï–ö–°–¢)

async def services(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text(–£–°–õ–£–ì–ò_–¢–ï–ö–°–¢, parse_mode='Markdown')

async def portfolio(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text(–ü–û–†–¢–§–û–õ–ò–û_–¢–ï–ö–°–¢, parse_mode='Markdown')

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text(–ü–û–ú–û–©–¨_–¢–ï–ö–°–¢)

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ª—é–±—ã—Ö –¥—Ä—É–≥–∏—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π ---
async def greet_user(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –∏–º–µ–Ω–∏, –µ—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞."""
    first_name = update.message.from_user.first_name
    await update.message.reply_text(
        f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {first_name}! üëã\n"
        f"–Ø –Ω–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω—è–ª –≤–∞—à –∑–∞–ø—Ä–æ—Å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥."
    )

# --- –î–∏–∞–ª–æ–≥ –¥–ª—è /contact ---

async def contact_start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    context.user_data['contact_info'] = {}
    await update.message.reply_text(
        "–û—Ç–ª–∏—á–Ω–æ! –î–∞–≤–∞–π—Ç–µ —Å–≤—è–∂–µ–º—Å—è. –°–Ω–∞—á–∞–ª–∞, –∫–∞–∫ –≤–∞—à–µ –ø–æ–ª–Ω–æ–µ –∏–º—è?"
    )
    return GET_NAME

async def get_name(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    user_name = update.message.text
    context.user_data['contact_info']['name'] = user_name
    await update.message.reply_text(
        f"–°–ø–∞—Å–∏–±–æ, {user_name}. –¢–µ–ø–µ—Ä—å, –∫–∞–∫–æ–π –≤–∞—à –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã?"
    )
    return GET_EMAIL

async def get_email(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    user_email = update.message.text
    context.user_data['contact_info']['email'] = user_email
    await update.message.reply_text(
        "–û—Ç–ª–∏—á–Ω–æ. –ù–∞–∫–æ–Ω–µ—Ü, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å."
    )
    return GET_MESSAGE

def save_contact_to_csv(data: dict):
    file_exists = os.path.isfile(CONTACT_FILE)
    with open(CONTACT_FILE, 'a', newline='', encoding='utf-8') as csvfile:
        fieldnames = ['name', 'email', 'message']
        writer = csv.DictWriter(csvfile, fieldnames=fieldnames)
        if not file_exists:
            writer.writeheader()
        writer.writerow(data)
    logger.info(f"–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ {CONTACT_FILE}")

async def get_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    user_message = update.message.text
    context.user_data['contact_info']['message'] = user_message
    save_contact_to_csv(context.user_data['contact_info'])
    await update.message.reply_text(
        "‚úÖ –°–ø–∞—Å–∏–±–æ! –ú—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Å–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ–º—Å—è."
    )
    context.user_data.clear()
    return ConversationHandler.END

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    await update.message.reply_text(
        "–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞. –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ —Å /contact –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è."
    )
    context.user_data.clear()
    return ConversationHandler.END

# --- –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ ---
def main() -> None:
    application = Application.builder().token(TOKEN).build()
    
    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("contact", contact_start)],
        states={
            GET_NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_name)],
            GET_EMAIL: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_email)],
            GET_MESSAGE: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_message)],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
    )

    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("about", about))
    application.add_handler(CommandHandler("services", services))
    application.add_handler(CommandHandler("portfolio", portfolio))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(conv_handler)
    
    # –≠—Ç–æ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω –æ–¥–Ω–∏–º –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, greet_user))

    logger.info("–ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    application.run_polling()

if __name__ == "__main__":
    main()